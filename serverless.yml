service: api-sample-service

provider:
  name: aws
  runtime: nodejs12.x
  profile: sls-sample
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  region: us-east-2

  package:
    excludeDevDependencies: true
    exclude:
      - .git/**
      - .idea/**
      - .dynamodb/**

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

  environment:
    ${file(./config/env/${self:provider.stage}.yml)}

custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:custom.stage}-${self:service}
  process: ${self:custom.prefix}-process
  config: ${self:custom.prefix}-config
  dynamo-user: ${self:custom.prefix}-user
  sns-logs: ${self:custom.prefix}-trigger-logs
  sqs-logs: ${self:custom.prefix}-messages-logs

  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: src/**/*.test.js

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true

  customDomain:
    domainName: 'api-sample.moboweb.com.br'
    certificateName: 'api-sample.moboweb.com.br'
    basePath: ${self:provider.stage}
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: 'regional'
    securityPolicy: tls_1_2

plugins:
  - serverless-dynamodb-local
  - serverless-webpack
  - serverless-domain-manager
  - serverless-offline

resources:
  ${file(./config/serverless/resources.yml)}

functions:
  ${file(./config/serverless/functions.yml)}